pid /app/nginx/nginx.pid;
error_log /app/nginx/error.log debug;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    # Ensure all error logs go to our new log directory
    error_log /app/nginx/error.log debug;

    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Logging
    log_format debug_format '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time" '
                          'upstream_addr="$upstream_addr" upstream_status="$upstream_status"';

    access_log /app/nginx/access.log debug_format buffer=512k flush=1m;

    # Temp paths
    client_body_temp_path /app/nginx/client_temp;
    proxy_temp_path /app/nginx/proxy_temp;
    fastcgi_temp_path /app/nginx/fastcgi_temp;
    uwsgi_temp_path /app/nginx/uwsgi_temp;
    scgi_temp_path /app/nginx/scgi_temp;

    # Optimization
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 300;
    keepalive_requests 1000;
    reset_timedout_connection on;
    client_body_timeout 60;
    send_timeout 60;
    client_max_body_size 10m;

    # Main server configuration
    server {
        listen 8080 default_server;
        server_name localhost visionflow.info;
        root /app/data/public/dist;

        # Health check endpoint - must come before other locations
        location = /health {
            access_log /app/nginx/access.log debug_format;
            error_log /app/nginx/error.log debug;

            # Try to proxy to backend, if it fails return static response
            error_page 502 503 504 = @health_static;

            proxy_pass http://127.0.0.1:3000/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Debug-Path "nginx-health";

            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;

            # Add response headers for debugging
            add_header X-Debug-Backend "reached-health-endpoint" always;
            add_header X-Debug-Remote-Addr $remote_addr always;
            add_header X-Debug-Host $host always;
            add_header Content-Type "application/json" always;
        }

        # Static health response
        location @health_static {
            add_header Content-Type "application/json" always;
            add_header X-Debug-Backend "static-health-response" always;
            return 200 '{"status":"healthy","message":"Static health response"}';
        }

        # WebSocket endpoint
        location /ws {
            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # API endpoints
        location /api/ {
            proxy_pass http://127.0.0.1:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 60s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
        }

        # Static files
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2?)$ {
            expires 7d;
            add_header Cache-Control "public, no-transform";
            try_files $uri =404;
            access_log off;
            tcp_nodelay off;
        }

        # HTML files
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, no-cache";
            try_files $uri =404;
        }

        # Default location
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }
    }
}
